generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  SUPER_ADMIN
  FIELD_OWNER
  REGULER_USER
}

enum BookingStatus {
  PENDING
  CONFIRMED
  CANCELLED
}

enum PaymentStatus {
  PENDING
  COMPLETED
  FAILED
}

model User {
  id        Int      @id @default(autoincrement())
  name      String
  email     String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model FutsalCourt {
  id        Int      @id @default(autoincrement())
  name      String
  location  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Booking {
  id          Int      @id @default(autoincrement())
  userId      Int
  courtId     Int
  startTime   DateTime
  endTime     DateTime
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  user        User     @relation(fields: [userId], references: [id])
  futsalCourt FutsalCourt @relation(fields: [courtId], references: [id])
}

model Payment {
  id          Int      @id @default(autoincrement())
  bookingId   Int
  amount      Float
  status      String   // e.g., "PENDING", "COMPLETED", "FAILED"
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  booking     Booking  @relation(fields: [bookingId], references: [id])
}

model Notification {
  id          Int      @id @default(autoincrement())
  userId      Int
  message     String
  isRead      Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  user        User     @relation(fields: [userId], references: [id])
}